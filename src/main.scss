/*! banana-grid | MIT License | github.com/dan2dev/banana-grid */
@import "./media.scss";
@import "./reset.scss";
$percentSizes: (010, 020, 030, 040, 050, 060, 070, 080, 090, 100, 025, 033, 066, 075);
$colSize: 96px;
$paddingSize: 16px;
// 15 grids de 96 ---------------------------
@mixin items_holder() {
	display: flex;
	flex-wrap: nowrap;
	align-items: center; // vertical
	align-content: center; // vertical (if break)
	justify-content: center; // horizontal
	padding: 0;
	& > * {
		padding: $paddingSize;
		box-sizing: border-box;
		flex-shrink: 0;
		flex-grow: 0;
		max-width: 100%;
	}
	& > .cols, & > .rows {
		&, &--x, &--xx, &--xxx {
			padding: 0;
		}
	}
}
@mixin cols($letter: null) {
	$l: true;
	@if $letter == null { $l: ""; }
	@else {	$l: "--" + $letter; }
	.cols#{$l} {
		flex-direction: row;
		@include items_holder();
	}
	&.wrap#{$l} {
		flex-wrap: wrap;
	}
	&.no-wrap#{$l} {
		flex-wrap: nowrap;
	}
	// cols items - vertical ------------
	.cols-top#{$l} { align-items: flex-start; align-content: flex-start; }
	.cols-middle#{$l} { align-items: center; align-content: center; }
	.cols-bottom#{$l} { align-items: flex-end; align-content: flex-end; }
	// horizontal 
	.cols-left#{$l} { justify-content: flex-start; }
	.cols-center#{$l} { justify-content: center; }
	.cols-right#{$l} { justify-content: flex-end; }
}
@mixin rows($letter: null) {
	$l: true;
	@if $letter == null { $l: ""; }
	@else {	$l: "--" + $letter; }
	.rows#{$l} {
		flex-direction: column;
		@include items_holder();
	}
	&.wrap#{$l} {
		flex-wrap: wrap;
	}
	&.no-wrap#{$l} {
		flex-wrap: nowrap;
	}
	// cols items - vertical ------------
	.rows-top#{$l} { justify-content: flex-start; }
	.rows-middle#{$l} { justify-content: center; }
	.rows-bottom#{$l} { justify-content: flex-end; }
	// horzontal 
	.rows-left#{$l} { align-items: flex-start; align-content: flex-start; }
	.rows-right#{$l} {  align-items: flex-end; align-content: flex-end; }
	.rows-center#{$l} {  align-items: center; align-content: center; }
}

@mixin align($letter: null) {
	// align must be after rows and cols
	$l: true;
	@if $letter == null { $l: ""; }
	@else {	$l: "--" + $letter; }
	.rows-around#{$l}, .cols-around#{$l} { justify-content: space-around; }
	.rows-between#{$l}, .cols-between#{$l} { justify-content: space-between; }
	.rows-stretch#{$l}, .cols-stretch#{$l}, .items-stretch#{$l}, .items-stretch#{$l} { align-items: stretch; align-content: stretch; }
	.rows-grow#{$l}, .cols-grow#{$l} { & > * { flex-grow: 1; }}	
	.rows-shrink#{$l}, .cols-shrink#{$l} { & > * { flex-shrink: 1; }}
	.rows-no-grow#{$l}, .cols-no-grow#{$l} { & > * { flex-grow: 0; }}	
	.rows-no-shrink#{$l}, .cols-no-shrink#{$l} { & > * { flex-shrink: 0; }}
	// cols and rows items -----------------
	%reset_align {
		align-self: inherit;
	}
	.cols#{$l}, .rows#{$l} {
		@if($letter == "x") {
			& {
				& > .top, & > .middle, & > .bottom, & > .left, & > .center, & > .right  { align-self: inherit; }
			}
		}
		@if($letter == "xx") {
			&, &--x {
				& > .top, & > .middle, & > .bottom, & > .left, & > .center, & > .right  { align-self: inherit; }
			}
		}
		@if($letter == "xxx") {
			&, &--x, &--xx {
				& > .top, & > .middle, & > .bottom, & > .left, & > .center, & > .right  { align-self: inherit; }
			}
		}
	}
	.cols#{$l} {
		& > .top { align-self: flex-start; }
		& > .middle { align-self: center; }
		& > .bottom { align-self: flex-end; }
	}
	.rows#{$l}  {
		& > .left { align-self: flex-start; }
		& > .center { align-self: center; }
		& > .right { align-self: flex-end; }
	}
	.rows#{$l}, .cols#{$l} {
		& > .stretch { align-self: stretch; }
	}
	// --------
	@if ($letter != null) {
		.cols#{$l} {
			& > .top#{$l} { align-self: flex-start; }
			& > .middle#{$l} { align-self: center; }
			& > .bottom#{$l} { align-self: flex-end; }
		}
		.rows#{$l} {
			& > .left#{$l} { align-self: flex-start; }
			& > .center#{$l} { align-self: center; }
			& > .right#{$l} { align-self: flex-end; }
		}
		.stretch#{$l} { align-self: stretch; }
		// ----------
	} 
	// normal
	// commons all cols and rows
	.grow#{$l} { flex-grow: 1; }
	.shrink#{$l} { flex-shrink: 1; }
	.no-grow#{$l} { flex-grow: 0; }
	.no-shrink#{$l} { flex-shrink: 0 }
	// order -------------------------
	.last#{$l} {
		order: 144;
	}
	.first#{$l} {
		order: -1;
	}
}
@mixin sizes($letter: null) {
	$l: true;
	@if $letter == null { $l: ""; }
	@else {	$l: "--" + $letter; }
	@for $i from 1 through 12 {
		.gw-#{$i}#{$l} { width: ($i * 96px); }
		.gh-#{$i}#{$l} { height: ($i * 96px); }
	}
	// fixed sizes -----------
	@for $i from 1 through 144 {
		.w-#{($i)}#{$l} { width: ($i * 8px); }
	}
	@for $i from 1 through 144 {
		.h-#{($i)}#{$l} { height: ($i * 8px); }
	}
	// percent sizes ------------
	@each $i in $percentSizes {
		.w-#{$i}p#{$l} {
			$isize: $i;
			@if $isize==33 { $isize: 33.3333; }
			@if $isize==66 { $isize: 66.6666; }
			width: $isize * 1%;
		}
		.h-#{$i}p#{$l} {
			$isize: $i;
			@if $isize==33 { $isize: 33.3333; }
			@if $isize==66 { $isize: 66.6666; }
			height: $isize * 1%;
		}
	}
}
@mixin text($letter: null) {
	$l: true;
	@if ( $letter == null ) { $l: ""; }
	@else {	$l: "--" + $letter; }
	%lineheight {
		line-height: 1.5;
	}
	.text-size {
		@for $i from 1 through 20 {
			&-#{$i}#{$l} {
				font-size: 8px + ($i * 2px);
				// @extend %lineheight;
			}
		}
	}
	.text-left#{$l} { text-align: left; }
	.text-right#{$l} { text-align: right; }
	.text-center#{$l} { text-align: center; }
	.text-justify#{$l} { text-align: justify;  }
}
@mixin inline($letter: null) {
	$l: true;
	@if ( $letter == null ) { $l: ""; }
	@else {	$l: "--" + $letter; }
	.v-align-top#{$l} { vertical-align: top; }
	.v-align-middle#{$l} { vertical-align: middle; }
	.v-align-bottom#{$l} { vertical-align: bottom; }
}
@mixin push($letter: null) {
	$l: true;
	@if ( $letter == null ) { $l: ""; }
	@else {	$l: "--" + $letter; }
	.push-left#{$l} { margin-right: auto; margin-left: 0; }
	.push-right#{$l} { margin-left: auto; margin-right: 0; }
	.push-top#{$l} { margin-bottom: auto; margin-top: 0; }
	.push-bottom#{$l} { margin-top: auto; margin-bottom: 0; }
}
@mixin margins($letter: null) {
	$l: true;
	@if ( $letter == null ) { $l: ""; }
	@else {	$l: "--" + $letter; }
	// paddings -----------------
	@for $i from 0 through 7 {
		.p-#{($i)}#{$l} { padding: ($i * 8px); }
		.p-top-#{($i)}#{$l} { padding-top: ($i * 8px); }
		.p-right-#{($i)}#{$l} { padding-right: ($i * 8px); }
		.p-bottom-#{($i)}#{$l} { padding-bottom: ($i * 8px); }
		.p-left-#{($i)}#{$l} { padding-left: ($i * 8px); }
	}
	@for $i from 0 through 7 {
		.m-#{($i)}#{$l} { margin: ($i * 8px); }
		.m-top-#{($i)}#{$l} { margin-top: ($i * 8px); }
		.m-right-#{($i)}#{$l} { margin-right: ($i * 8px); }
		.m-bottom-#{($i)}#{$l} { margin-bottom: ($i * 8px); }
		.m-left-#{($i)}#{$l} { margin-left: ($i * 8px); }
	}
}
@mixin hide-show($letter: null) {
	$l: true;
	@if ( $letter == null ) { $l: ""; }
	@else {	$l: "--" + $letter; }
	.hide#{$l} { display: none; }
	.show#{$l} { display: inherit; }
}

@include all {
	@include cols();
	@include rows();
	@include align();
	@include sizes();
	@include text();
	@include inline();
	@include push();
	@include margins();
	@include hide-show();
}
@include x {
	@include cols(x);
	@include rows(x);
	@include align(x);
	@include sizes(x);
	@include text(x);
	@include inline(x);
	@include push(x);
	@include margins(x);
	@include hide-show(x);
}
@media screen {
	@include xx {
		@include cols(xx);
		@include rows(xx);
		@include align(xx);
		@include sizes(xx);
		@include text(xx);
		@include inline(xx);
		@include push(xx);
		@include margins(xx);
		@include hide-show(xx);
	}
	@include xxx {
		@include cols(xxx);
		@include rows(xxx);
		@include align(xxx);
		@include sizes(xxx);
		@include text(xxx);
		@include inline(xxx);
		@include push(xxx);
		@include margins(xxx);
		@include hide-show(xxx);
	}
}
@media print {
	body {
		@include cols(p);
		@include rows(p);
		@include align(p);
		@include sizes(p);
		@include text(p);
		@include inline(p);
		@include push(p);
		@include margins(p);
		@include hide-show(p);
	}
	body {
		max-width: 100vw !important;
	}
	address, article, aside, blockquote, canvas, dd, div, dl, dt, fieldset, figcaption, figure, footer, form, h1, h2, h3, h4, h5, h6, header, hr, li, main, nav, noscript, ol, output, p, pre, section, table, tfoot, ul, video {
		overflow: hidden;
		max-height: 0;
		visibility: hidden;		
	}
	.p {
		max-height: inherit;
		visibility: visible;
		left: inherit;
		& > h1, & > h2, & > h3, & > h4, & > h5, & > h6, & > ul, & > li, & > p, & > ol  {
			visibility: visible;
			max-height: inherit;
		}
	}
}
